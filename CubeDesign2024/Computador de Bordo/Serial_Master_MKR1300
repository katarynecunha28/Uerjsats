void setup() {
  Serial.begin(9600);  // Serial para debug e Slave Uno
  Serial1.begin(9600);  // Serial1 para o Slave WiFi (MKR WiFi 1010) 

}

void loop() {
  receberDadosDoSlave1(3);

  receberDadosDoSlave2(4);
  
  enviarDadosParaSlave("Dados para Slave WiFi", 1);  // Envia para o Slave WiFi (MKR WiFi 1010)
  delay(1000);
  
  enviarDadosParaSlave("Dados para Slave Uno", 2);   // Envia para o Slave Uno (Arduino Uno)
  delay(1000);

}

void receberDadosDoSlave1(int endereco) {
  if (Serial1.available() > 0) {
    String dadosRecebidos = Serial1.readStringUntil('\n');
    int enderecoRecebido = dadosRecebidos.substring(0, 1).toInt();
    
    if (enderecoRecebido == endereco) {
      String dados = dadosRecebidos.substring(1);
      Serial1.println("Dados recebidos do Slave 1: " + dados);
      Serial.println("Dados recebidos do Slave 1: " + dados);
    }
  }
}

void receberDadosDoSlave2(int endereco) {
  if (Serial.available() > 0) {
    String dadosRecebidos = Serial.readStringUntil('\n');
    int enderecoRecebido = dadosRecebidos.substring(0, 2).toInt();
    
    if (enderecoRecebido == endereco) {
      String dados = dadosRecebidos.substring(2);
      Serial1.println("Dados recebidos do Slave 2: " + dados);
      Serial.println("Dados recebidos do Slave 2: " + dados);
    }
  }
}

void enviarDadosParaSlave(String dados, int endereco) {
  Serial1.print(endereco);  // Identificador de destino
  Serial1.print(":");
  Serial1.println(dados);

  Serial.print(endereco);  // Printar no monitor serial
  Serial.print(":");
  Serial.println(dados);

  
}
